[{"/Users/erthru/Desktop/erthru-cv/src/index.tsx":"1","/Users/erthru/Desktop/erthru-cv/src/reportWebVitals.ts":"2","/Users/erthru/Desktop/erthru-cv/src/plugins/store/index.ts":"3","/Users/erthru/Desktop/erthru-cv/src/plugins/store/navigation/reducers.ts":"4","/Users/erthru/Desktop/erthru-cv/src/plugins/store/work-experience/reducers.ts":"5","/Users/erthru/Desktop/erthru-cv/src/plugins/store/profile/reducers.ts":"6","/Users/erthru/Desktop/erthru-cv/src/plugins/store/navigation/types.ts":"7","/Users/erthru/Desktop/erthru-cv/src/plugins/store/work-experience/types.ts":"8","/Users/erthru/Desktop/erthru-cv/src/plugins/store/profile/types.ts":"9","/Users/erthru/Desktop/erthru-cv/src/containers/admin/index.tsx":"10","/Users/erthru/Desktop/erthru-cv/src/plugins/store/work-experience/actions.ts":"11","/Users/erthru/Desktop/erthru-cv/src/plugins/store/profile/actions.ts":"12","/Users/erthru/Desktop/erthru-cv/src/containers/admin/portfolios/index.tsx":"13","/Users/erthru/Desktop/erthru-cv/src/containers/admin/contacts/index.tsx":"14","/Users/erthru/Desktop/erthru-cv/src/containers/admin/languages/index.tsx":"15","/Users/erthru/Desktop/erthru-cv/src/containers/admin/edit-work-experience/index.tsx":"16","/Users/erthru/Desktop/erthru-cv/src/containers/admin/overview/index.tsx":"17","/Users/erthru/Desktop/erthru-cv/src/containers/admin/work-experiences/index.tsx":"18","/Users/erthru/Desktop/erthru-cv/src/containers/admin/formal-educations/index.tsx":"19","/Users/erthru/Desktop/erthru-cv/src/containers/admin/add-work-experience/index.tsx":"20","/Users/erthru/Desktop/erthru-cv/src/containers/admin/settings/index.tsx":"21","/Users/erthru/Desktop/erthru-cv/src/containers/admin/documents/index.tsx":"22","/Users/erthru/Desktop/erthru-cv/src/components/sidebar/index.tsx":"23","/Users/erthru/Desktop/erthru-cv/src/components/topbar/index.tsx":"24","/Users/erthru/Desktop/erthru-cv/src/plugins/db/index.ts":"25","/Users/erthru/Desktop/erthru-cv/src/plugins/store/navigation/actions.ts":"26","/Users/erthru/Desktop/erthru-cv/src/helpers/environments.ts":"27","/Users/erthru/Desktop/erthru-cv/src/components/work-experience-form/index.tsx":"28","/Users/erthru/Desktop/erthru-cv/src/components/me/index.tsx":"29","/Users/erthru/Desktop/erthru-cv/src/components/work-experiences/index.tsx":"30","/Users/erthru/Desktop/erthru-cv/src/components/sidebar-item/index.tsx":"31","/Users/erthru/Desktop/erthru-cv/src/components/progress-bar/index.tsx":"32","/Users/erthru/Desktop/erthru-cv/src/components/topbar-item/index.tsx":"33","/Users/erthru/Desktop/erthru-cv/src/components/alert/index.tsx":"34","/Users/erthru/Desktop/erthru-cv/src/components/button/index.tsx":"35","/Users/erthru/Desktop/erthru-cv/src/components/input/index.tsx":"36","/Users/erthru/Desktop/erthru-cv/src/components/me-edit-form/index.tsx":"37","/Users/erthru/Desktop/erthru-cv/src/components/modal/index.tsx":"38","/Users/erthru/Desktop/erthru-cv/src/components/remove-button/index.tsx":"39","/Users/erthru/Desktop/erthru-cv/src/components/table/index.tsx":"40","/Users/erthru/Desktop/erthru-cv/src/components/add-new-button/index.tsx":"41","/Users/erthru/Desktop/erthru-cv/src/components/edit-button/index.tsx":"42","/Users/erthru/Desktop/erthru-cv/src/components/search-input/index.tsx":"43","/Users/erthru/Desktop/erthru-cv/src/components/backdrop/index.tsx":"44","/Users/erthru/Desktop/erthru-cv/src/components/card/index.tsx":"45","/Users/erthru/Desktop/erthru-cv/src/plugins/store/formal-education/reducers.ts":"46","/Users/erthru/Desktop/erthru-cv/src/plugins/store/formal-education/types.ts":"47","/Users/erthru/Desktop/erthru-cv/src/plugins/store/formal-education/actions.ts":"48","/Users/erthru/Desktop/erthru-cv/src/components/formal-educations/index.tsx":"49","/Users/erthru/Desktop/erthru-cv/src/containers/admin/add-formal-education/index.tsx":"50","/Users/erthru/Desktop/erthru-cv/src/components/formal-education-form/index.tsx":"51","/Users/erthru/Desktop/erthru-cv/src/containers/admin/edit-formal-education/index.tsx":"52","/Users/erthru/Desktop/erthru-cv/src/containers/index.tsx":"53","/Users/erthru/Desktop/erthru-cv/src/containers/landing/index.tsx":"54"},{"size":742,"mtime":1607851082044,"results":"55","hashOfConfig":"56"},{"size":467,"mtime":1607608835873,"results":"57","hashOfConfig":"56"},{"size":698,"mtime":1607845782875,"results":"58","hashOfConfig":"56"},{"size":560,"mtime":1607770974409,"results":"59","hashOfConfig":"56"},{"size":2953,"mtime":1607771437315,"results":"60","hashOfConfig":"56"},{"size":1188,"mtime":1607769714236,"results":"61","hashOfConfig":"56"},{"size":569,"mtime":1607797039146,"results":"62","hashOfConfig":"56"},{"size":1871,"mtime":1607771417078,"results":"63","hashOfConfig":"56"},{"size":1078,"mtime":1607843308912,"results":"64","hashOfConfig":"56"},{"size":4259,"mtime":1607850731260,"results":"65","hashOfConfig":"56"},{"size":4240,"mtime":1607849709569,"results":"66","hashOfConfig":"56"},{"size":2516,"mtime":1607845521475,"results":"67","hashOfConfig":"56"},{"size":104,"mtime":1607774962505,"results":"68","hashOfConfig":"56"},{"size":98,"mtime":1607774889789,"results":"69","hashOfConfig":"56"},{"size":101,"mtime":1607774932277,"results":"70","hashOfConfig":"56"},{"size":913,"mtime":1607775236326,"results":"71","hashOfConfig":"56"},{"size":310,"mtime":1607850984005,"results":"72","hashOfConfig":"56"},{"size":757,"mtime":1607775023461,"results":"73","hashOfConfig":"56"},{"size":765,"mtime":1607850960380,"results":"74","hashOfConfig":"56"},{"size":773,"mtime":1607775228470,"results":"75","hashOfConfig":"56"},{"size":98,"mtime":1607797039144,"results":"76","hashOfConfig":"56"},{"size":101,"mtime":1607774903300,"results":"77","hashOfConfig":"56"},{"size":3685,"mtime":1607848458251,"results":"78","hashOfConfig":"56"},{"size":5113,"mtime":1607852172360,"results":"79","hashOfConfig":"56"},{"size":544,"mtime":1607668011485,"results":"80","hashOfConfig":"56"},{"size":313,"mtime":1607771096442,"results":"81","hashOfConfig":"56"},{"size":726,"mtime":1607797039145,"results":"82","hashOfConfig":"56"},{"size":7476,"mtime":1607850391504,"results":"83","hashOfConfig":"56"},{"size":6575,"mtime":1607843625992,"results":"84","hashOfConfig":"56"},{"size":3859,"mtime":1607850769251,"results":"85","hashOfConfig":"56"},{"size":965,"mtime":1607797142716,"results":"86","hashOfConfig":"56"},{"size":416,"mtime":1607749001743,"results":"87","hashOfConfig":"56"},{"size":877,"mtime":1607797175932,"results":"88","hashOfConfig":"56"},{"size":811,"mtime":1607797039113,"results":"89","hashOfConfig":"56"},{"size":817,"mtime":1607691661266,"results":"90","hashOfConfig":"56"},{"size":1040,"mtime":1607797039115,"results":"91","hashOfConfig":"56"},{"size":5727,"mtime":1607843656290,"results":"92","hashOfConfig":"56"},{"size":633,"mtime":1607797039119,"results":"93","hashOfConfig":"56"},{"size":524,"mtime":1607797039120,"results":"94","hashOfConfig":"56"},{"size":1531,"mtime":1607797388966,"results":"95","hashOfConfig":"56"},{"size":566,"mtime":1607797039112,"results":"96","hashOfConfig":"56"},{"size":540,"mtime":1607797039114,"results":"97","hashOfConfig":"56"},{"size":831,"mtime":1607797339971,"results":"98","hashOfConfig":"56"},{"size":266,"mtime":1607670466727,"results":"99","hashOfConfig":"56"},{"size":337,"mtime":1607836944089,"results":"100","hashOfConfig":"56"},{"size":3011,"mtime":1607840753279,"results":"101","hashOfConfig":"56"},{"size":1906,"mtime":1607839758984,"results":"102","hashOfConfig":"56"},{"size":3610,"mtime":1607850869629,"results":"103","hashOfConfig":"56"},{"size":3872,"mtime":1607850892337,"results":"104","hashOfConfig":"56"},{"size":780,"mtime":1607850614503,"results":"105","hashOfConfig":"56"},{"size":5599,"mtime":1607850554735,"results":"106","hashOfConfig":"56"},{"size":920,"mtime":1607850718130,"results":"107","hashOfConfig":"56"},{"size":328,"mtime":1607851067889,"results":"108","hashOfConfig":"56"},{"size":93,"mtime":1607851001497,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"190sg32",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/erthru/Desktop/erthru-cv/src/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/reportWebVitals.ts",[],["236","237"],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/index.ts",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/navigation/reducers.ts",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/work-experience/reducers.ts",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/profile/reducers.ts",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/navigation/types.ts",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/work-experience/types.ts",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/profile/types.ts",["238","239","240","241","242","243","244","245"],"export enum PROFILE_TYPES {\n    FETCH_PROFILE_PREPARE,\n    FETCH_PROFILE_COMPLETED,\n    UPDATE_PROFILE_PREPARE,\n    UPDATE_PROFILE_COMPLETED,\n}\n\nexport const PROFILE_COL_NAME = \"profiles\";\n\nexport type Profile = {\n    id?: string;\n    [ProfileField.fullName]?: string;\n    [ProfileField.avatarUrl]?: string;\n    [ProfileField.coverUrl]?: string;\n    [ProfileField.intro]?: string;\n    [ProfileField.career]?: string;\n    [ProfileField.currentResidenceAddress]?: string;\n    [ProfileField.createdOn]?: Date;\n    [ProfileField.updatedOn]?: Date;\n};\n\nexport enum ProfileField {\n    fullName = \"fullName\",\n    avatarUrl = \"avatarUrl\",\n    coverUrl = \"coverUrl\",\n    intro = \"intro\",\n    career = \"career\",\n    currentResidenceAddress = \"currentResidenceAddress\",\n    createdOn = \"createdOn\",\n    updatedOn = \"updatedOn\",\n}\n\nexport type ProfileState = {\n    profile: Profile;\n    isFetchingProfile: boolean;\n    isUpdatingProfile: boolean;\n    isProfileUpdated: boolean;\n};\n\nexport type ProfileAction = {\n    type: PROFILE_TYPES;\n    payload?: {\n        profile?: Profile;\n    };\n};\n","/Users/erthru/Desktop/erthru-cv/src/containers/admin/index.tsx",["246","247"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Sidebar from \"../../components/sidebar\";\nimport Topbar from \"../../components/topbar\";\nimport { Store } from \"../../plugins/store\";\nimport { fetchFormalEducations } from \"../../plugins/store/formal-education/actions\";\nimport { fetchProfile } from \"../../plugins/store/profile/actions\";\nimport { fetchWorkExperiences } from \"../../plugins/store/work-experience/actions\";\nimport AddFormalEducation from \"./add-formal-education\";\nimport AddWorkExperience from \"./add-work-experience\";\nimport Contacts from \"./contacts\";\nimport Documents from \"./documents\";\nimport EditFormalEducation from \"./edit-formal-education\";\nimport EditWorkExperience from \"./edit-work-experience\";\nimport FormalEducations from \"./formal-educations\";\nimport Languages from \"./languages\";\nimport Overview from \"./overview\";\nimport Portfolios from \"./portfolios\";\nimport Settings from \"./settings\";\nimport WorkExperiences from \"./work-experiences\";\n\nconst Admin = () => {\n    const dispatch = useDispatch();\n    const isProfileUpdated = useSelector((store: Store) => store.profile.isProfileUpdated) as boolean;\n    const isNewWorkExperienceAdded = useSelector((store: Store) => store.workExperience.isNewWorkExperienceAdded) as boolean;\n    const isWorkExperienceUpdated = useSelector((store: Store) => store.workExperience.isWorkExperienceUpdated) as boolean;\n    const isWorkExperienceRemoved = useSelector((store: Store) => store.workExperience.isWorkExperienceRemoved) as boolean;\n    const isNewFormalEducationAdded = useSelector((store: Store) => store.formalEducation.isNewFormalEducationAdded) as boolean;\n    const isFormalEducationUpdated = useSelector((store: Store) => store.formalEducation.isFormalEducationUpdated) as boolean;\n    const isFormalEducationRemoved = useSelector((store: Store) => store.formalEducation.isFormalEducationRemoved) as boolean;\n\n    useEffect(() => {\n        dispatch(fetchProfile());\n        dispatch(fetchWorkExperiences());\n        dispatch(fetchFormalEducations());\n    }, []);\n\n    useEffect(() => {\n        if (isProfileUpdated) dispatch(fetchProfile());\n        if (isNewWorkExperienceAdded || isWorkExperienceUpdated || isWorkExperienceRemoved) dispatch(fetchWorkExperiences());\n        if (isNewFormalEducationAdded || isFormalEducationUpdated || isFormalEducationRemoved) dispatch(fetchFormalEducations());\n    }, [\n        isProfileUpdated,\n        isNewWorkExperienceAdded,\n        isWorkExperienceUpdated,\n        isWorkExperienceRemoved,\n        isNewFormalEducationAdded,\n        isFormalEducationUpdated,\n        isFormalEducationRemoved,\n    ]);\n\n    return (\n        <div className=\"flex p-4 lg:p-6 container mx-auto\">\n            <Sidebar />\n\n            <div className=\"w-full flex flex-wrap lg:ml-6\">\n                <Topbar />\n\n                <div className=\"w-full h-full mt-4 lg:mt-6\">\n                    <Switch>\n                        <Route exact path=\"/admin\" component={Overview} />\n                        <Route exact path=\"/admin/work-experiences\" component={WorkExperiences} />\n                        <Route exact path=\"/admin/work-experience/add\" component={AddWorkExperience} />\n                        <Route exact path=\"/admin/work-experience/edit/:id\" component={EditWorkExperience} />\n                        <Route exact path=\"/admin/formal-educations\" component={FormalEducations} />\n                        <Route exact path=\"/admin/formal-education/add\" component={AddFormalEducation} />\n                        <Route exact path=\"/admin/formal-education/edit/:id\" component={EditFormalEducation} />\n                        <Route exact path=\"/admin/languages\" component={Languages} />\n                        <Route exact path=\"/admin/portfolios\" component={Portfolios} />\n                        <Route exact path=\"/admin/contacts\" component={Contacts} />\n                        <Route exact path=\"/admin/documents\" component={Documents} />\n                        <Route exact path=\"/admin/settings\" component={Settings} />\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Admin;\n","/Users/erthru/Desktop/erthru-cv/src/plugins/store/work-experience/actions.ts",["248"],"import { Dispatch } from \"redux\";\nimport db from \"../../db\";\nimport { WorkExperienceAction, WORK_EXPERIENCE_TYPES, WORK_EXPERIENCE_COL_NAME, WorkExperienceField, WorkExperience } from \"./types\";\n\nexport const fetchWorkExperiences = () => async (dispatch: Dispatch<WorkExperienceAction>) => {\n    try {\n        dispatch({ type: WORK_EXPERIENCE_TYPES.FETCH_WORK_EXPERIENCES_PREPARE });\n\n        const workExperiences: any[] = [];\n        let workExperiencesSnapshot = await db.collection(WORK_EXPERIENCE_COL_NAME).orderBy(WorkExperienceField.createdOn, \"desc\").get();\n\n        if (workExperiencesSnapshot.docs.length === 0) {\n            await db.collection(WORK_EXPERIENCE_COL_NAME).add({\n                [WorkExperienceField.timeframe]: \"01/2018 - Present\",\n                [WorkExperienceField.place]: \"Blod Id\",\n                [WorkExperienceField.activities]: [\"Develop backend web using Laravel\", \"Develop android app using Android Studio\"],\n                [WorkExperienceField.createdOn]: new Date(),\n                [WorkExperienceField.updatedOn]: new Date(),\n            });\n\n            await db.collection(WORK_EXPERIENCE_COL_NAME).add({\n                [WorkExperienceField.timeframe]: \"01/2019 - 08/2019\",\n                [WorkExperienceField.place]: \"PT Mitra Net Data Nusantara\",\n                [WorkExperienceField.activities]: [\n                    \"Develop backend web using Codeigniter\",\n                    \"Develop android app using Android Studio\",\n                    \"Develop desktop app using JavaFX\",\n                ],\n                [WorkExperienceField.createdOn]: new Date(),\n                [WorkExperienceField.updatedOn]: new Date(),\n            });\n\n            workExperiencesSnapshot = await db.collection(WORK_EXPERIENCE_COL_NAME).orderBy(WorkExperienceField.createdOn, \"desc\").get();\n        }\n\n        workExperiencesSnapshot.docs.map((doc) => {\n            workExperiences.push({\n                id: doc.id,\n                ...doc.data(),\n            });\n        });\n\n        dispatch({ type: WORK_EXPERIENCE_TYPES.FETCH_WORK_EXPERIENCES_COMPLETED, payload: { workExperiences: workExperiences as WorkExperience[] } });\n    } catch (e) {}\n};\n\nexport const fetchWorkExperience = (id: string) => async (dispatch: Dispatch<WorkExperienceAction>) => {\n    try {\n        dispatch({ type: WORK_EXPERIENCE_TYPES.FETCH_WORK_EXPERIENCE_PREPARE });\n        const workExperienceDoc = await db.collection(WORK_EXPERIENCE_COL_NAME).doc(id).get();\n\n        let workExperience = {\n            id: workExperienceDoc.id,\n            ...workExperienceDoc.data(),\n        };\n\n        dispatch({ type: WORK_EXPERIENCE_TYPES.FETCH_WORK_EXPERIENCE_COMPLETED, payload: { workExperience: workExperience as WorkExperience } });\n    } catch (e) {}\n};\n\nexport const addWorkExperience = (workExperience: WorkExperience) => async (dispatch: Dispatch<WorkExperienceAction>) => {\n    try {\n        dispatch({ type: WORK_EXPERIENCE_TYPES.ADD_WORK_EXPERIENCE_PREPARE });\n\n        await db.collection(WORK_EXPERIENCE_COL_NAME).add({\n            [WorkExperienceField.createdOn]: new Date(),\n            [WorkExperienceField.updatedOn]: new Date(),\n            ...workExperience,\n        });\n\n        dispatch({ type: WORK_EXPERIENCE_TYPES.ADD_WORK_EXPERIENCE_COMPLETED });\n    } catch (e) {}\n};\n\nexport const updateWorkExperience = (id: string, workExperience: WorkExperience) => async (dispatch: Dispatch<WorkExperienceAction>) => {\n    try {\n        dispatch({ type: WORK_EXPERIENCE_TYPES.UPDATE_WORK_EXPERIENCE_PREPARE });\n\n        await db\n            .collection(WORK_EXPERIENCE_COL_NAME)\n            .doc(id)\n            .update({\n                [WorkExperienceField.updatedOn]: new Date(),\n                ...workExperience,\n            });\n\n        dispatch({ type: WORK_EXPERIENCE_TYPES.UPDATE_WORK_EXPERIENCE_COMPLETED });\n    } catch (e) {}\n};\n\nexport const removeWorkExperience = (id: string) => async (dispatch: Dispatch<WorkExperienceAction>) => {\n    try {\n        dispatch({ type: WORK_EXPERIENCE_TYPES.REMOVE_WORK_EXPERIENCE_PREPARE });\n        await db.collection(WORK_EXPERIENCE_COL_NAME).doc(id).delete();\n        dispatch({ type: WORK_EXPERIENCE_TYPES.REMOVE_WORK_EXPERIENCE_COMPLETED });\n    } catch (e) {}\n};\n","/Users/erthru/Desktop/erthru-cv/src/plugins/store/profile/actions.ts",["249"],"import { Dispatch } from \"redux\";\nimport db from \"../../db\";\nimport { ProfileAction, PROFILE_TYPES, PROFILE_COL_NAME, ProfileField, Profile } from \"./types\";\n\nexport const fetchProfile = () => async (dispatch: Dispatch<ProfileAction>) => {\n    try {\n        dispatch({ type: PROFILE_TYPES.FETCH_PROFILE_PREPARE });\n\n        const profiles: any[] = [];\n        let profilesSnapshots = await db.collection(PROFILE_COL_NAME).get();\n\n        if (profilesSnapshots.docs.length === 0) {\n            await db.collection(PROFILE_COL_NAME).add({\n                [ProfileField.fullName]: \"Suprianto Djamalu\",\n                [ProfileField.avatarUrl]: \"https://i.ibb.co/5K3Nd8P/me.jpg\",\n                [ProfileField.coverUrl]: \"https://i.ibb.co/ftLQmtM/pexels-junior-teixeira-2047905-1.jpg\",\n                [ProfileField.intro]:\n                    \"Very enthusiastic in following technological developments such as web (front end / back end) development, mobile (android / ios) development and many more. Had 3 years of experience as a developer. Always using git version control for my repository. Since I’m a developer, I’m very interested in learning and moving forward into latest technologies required to work with it.\",\n                [ProfileField.career]: \"Software Developer\",\n                [ProfileField.currentResidenceAddress]: \"Jl. Something Inside in Indonesia or Maybe in Sulawesi, Gorontalo\",\n                [ProfileField.createdOn]: new Date(),\n                [ProfileField.updatedOn]: new Date(),\n            });\n\n            profilesSnapshots = await db.collection(PROFILE_COL_NAME).get();\n        }\n\n        profilesSnapshots.docs.map((doc) => {\n            profiles.push({\n                id: doc.id,\n                ...doc.data(),\n            });\n        });\n\n        dispatch({ type: PROFILE_TYPES.FETCH_PROFILE_COMPLETED, payload: { profile: profiles[0] } });\n    } catch (e) {}\n};\n\nexport const updateProfile = (profile: Profile) => async (dispatch: Dispatch<ProfileAction>) => {\n    try {\n        dispatch({ type: PROFILE_TYPES.UPDATE_PROFILE_PREPARE });\n\n        let id = \"\";\n        let profilesSnapshots = await db.collection(PROFILE_COL_NAME).get();\n        id = profilesSnapshots.docs[0].id;\n\n        await db\n            .collection(PROFILE_COL_NAME)\n            .doc(id)\n            .update({\n                [ProfileField.updatedOn]: new Date(),\n                ...profile,\n            });\n\n        dispatch({ type: PROFILE_TYPES.UPDATE_PROFILE_COMPLETED });\n    } catch (e) {}\n};\n","/Users/erthru/Desktop/erthru-cv/src/containers/admin/portfolios/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/containers/admin/contacts/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/containers/admin/languages/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/containers/admin/edit-work-experience/index.tsx",["250"],"import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport WorkExperienceForm from \"../../../components/work-experience-form\";\nimport { APP_TITLE } from \"../../../helpers/environments\";\nimport { setNavigationKey } from \"../../../plugins/store/navigation/actions\";\nimport { NavigationKey } from \"../../../plugins/store/navigation/types\";\n\ntype Params = {\n    id: string;\n};\n\nconst EditWorkExperience = () => {\n    const dispatch = useDispatch();\n    const params = useParams<Params>();\n\n    useEffect(() => {\n        dispatch(setNavigationKey(NavigationKey.workExperiences));\n    }, []);\n\n    return (\n        <div>\n            <Helmet title={\"Edit Work Experience - \" + APP_TITLE} />\n            <WorkExperienceForm id={params.id} />\n        </div>\n    );\n};\n\nexport default EditWorkExperience;\n","/Users/erthru/Desktop/erthru-cv/src/containers/admin/overview/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/containers/admin/work-experiences/index.tsx",["251","252"],"import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch } from \"react-redux\";\nimport _WorkExperiences from \"../../../components/work-experiences\";\nimport { APP_TITLE } from \"../../../helpers/environments\";\nimport { setNavigationKey } from \"../../../plugins/store/navigation/actions\";\nimport { NavigationKey } from \"../../../plugins/store/navigation/types\";\n\nconst WorkExperiences = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setNavigationKey(NavigationKey.workExperiences));\n    }, []);\n\n    return (\n        <div>\n            <Helmet title={\"Work Experience - \" + APP_TITLE} />\n            <_WorkExperiences />\n        </div>\n    );\n};\n\nexport default WorkExperiences;\n","/Users/erthru/Desktop/erthru-cv/src/containers/admin/formal-educations/index.tsx",["253","254"],"import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch } from \"react-redux\";\nimport { APP_TITLE } from \"../../../helpers/environments\";\nimport { setNavigationKey } from \"../../../plugins/store/navigation/actions\";\nimport { NavigationKey } from \"../../../plugins/store/navigation/types\";\nimport _FormalEducations from \"../../../components/formal-educations\";\n\nconst FormalEducations = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setNavigationKey(NavigationKey.formalEducations));\n    }, []);\n\n    return (\n        <div>\n            <Helmet title={\"Formal Educations - \" + APP_TITLE} />\n            <_FormalEducations />\n        </div>\n    );\n};\n\nexport default FormalEducations;\n","/Users/erthru/Desktop/erthru-cv/src/containers/admin/add-work-experience/index.tsx",["255"],"import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch } from \"react-redux\";\nimport WorkExperienceForm from \"../../../components/work-experience-form\";\nimport { APP_TITLE } from \"../../../helpers/environments\";\nimport { setNavigationKey } from \"../../../plugins/store/navigation/actions\";\nimport { NavigationKey } from \"../../../plugins/store/navigation/types\";\n\nconst AddWorkExperience = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setNavigationKey(NavigationKey.workExperiences));\n    }, []);\n\n    return (\n        <div>\n            <Helmet title={\"Add Work Experience - \" + APP_TITLE} />\n            <WorkExperienceForm />\n        </div>\n    );\n};\n\nexport default AddWorkExperience;\n","/Users/erthru/Desktop/erthru-cv/src/containers/admin/settings/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/containers/admin/documents/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/sidebar/index.tsx",["256"],"import { faBriefcase, faFileCode, faIdCard, faLanguage, faLayerGroup, faThLarge, faTools, faUniversity } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { APP_TITLE } from \"../../helpers/environments\";\nimport { Store } from \"../../plugins/store\";\nimport { setNavigationKey } from \"../../plugins/store/navigation/actions\";\nimport { NavigationKey } from \"../../plugins/store/navigation/types\";\nimport Card from \"../card\";\nimport SidebarItem from \"../sidebar-item\";\n\ntype Props = {\n    className?: string;\n};\n\nconst Sidebar = (props: Props) => {\n    const currentActiveKey = useSelector((store: Store) => store.navigation.currentActiveKey) as NavigationKey;\n    const dispatch = useDispatch();\n\n    return (\n        <Card className={\"hidden lg:flex flex-wrap py-6 \" + props.className} style={{ width: \"350px\" }}>\n            <div className=\"flex flex-wrap mx-auto text-center\">\n                <span className=\"text-2xl font-bold text-gray-600 w-full\">{APP_TITLE.split(\" \")[0]}</span>\n                <span className=\"text-lg font-bold text-gray-400 w-full -mt-1\">{APP_TITLE.split(\" \")[1]}</span>\n            </div>\n\n            <SidebarItem\n                icon={faThLarge}\n                title=\"OVERVIEW\"\n                isActive={currentActiveKey === NavigationKey.overview}\n                to=\"/admin\"\n                className=\"mt-6\"\n                onClick={() => dispatch(setNavigationKey(NavigationKey.overview))}\n            />\n\n            <SidebarItem\n                icon={faBriefcase}\n                title=\"WORK EXPERIENCES\"\n                className=\"mt-2\"\n                isActive={currentActiveKey === NavigationKey.workExperiences}\n                to=\"/admin/work-experiences\"\n                onClick={() => dispatch(setNavigationKey(NavigationKey.workExperiences))}\n            />\n\n            <SidebarItem\n                icon={faUniversity}\n                title=\"FORMAL EDUCATIONS\"\n                className=\"mt-2\"\n                isActive={currentActiveKey === NavigationKey.formalEducations}\n                to=\"/admin/formal-educations\"\n                onClick={() => dispatch(setNavigationKey(NavigationKey.formalEducations))}\n            />\n\n            <SidebarItem\n                icon={faLanguage}\n                title=\"LANGUAGES\"\n                className=\"mt-2\"\n                isActive={currentActiveKey === NavigationKey.languages}\n                to=\"/admin/languages\"\n                onClick={() => dispatch(setNavigationKey(NavigationKey.languages))}\n            />\n\n            <SidebarItem\n                icon={faLayerGroup}\n                title=\"PORTFOLIOS\"\n                className=\"mt-2\"\n                isActive={currentActiveKey === NavigationKey.portfolios}\n                to=\"/admin/portfolios\"\n                onClick={() => dispatch(setNavigationKey(NavigationKey.portfolios))}\n            />\n\n            <SidebarItem\n                icon={faIdCard}\n                title=\"CONTACTS\"\n                className=\"mt-2\"\n                isActive={currentActiveKey === NavigationKey.contacts}\n                to=\"/admin/contacts\"\n                onClick={() => dispatch(setNavigationKey(NavigationKey.contacts))}\n            />\n\n            <SidebarItem\n                icon={faFileCode}\n                title=\"DOCUMENTS\"\n                className=\"mt-2\"\n                isActive={currentActiveKey === NavigationKey.documents}\n                to=\"/admin/documents\"\n                onClick={() => dispatch(setNavigationKey(NavigationKey.documents))}\n            />\n\n            <div className=\"h-full\" />\n        </Card>\n    );\n};\n\nexport default Sidebar;\n","/Users/erthru/Desktop/erthru-cv/src/components/topbar/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/db/index.ts",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/navigation/actions.ts",[],"/Users/erthru/Desktop/erthru-cv/src/helpers/environments.ts",[],"/Users/erthru/Desktop/erthru-cv/src/components/work-experience-form/index.tsx",["257","258","259"],"import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FormEvent, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Store } from \"../../plugins/store\";\nimport { addWorkExperience, fetchWorkExperience, updateWorkExperience } from \"../../plugins/store/work-experience/actions\";\nimport { WorkExperience } from \"../../plugins/store/work-experience/types\";\nimport Alert, { AlertMode } from \"../alert\";\nimport Button from \"../button\";\nimport Card from \"../card\";\nimport Input from \"../input\";\nimport ProgressBar from \"../progress-bar\";\n\ntype Props = {\n    id?: string;\n};\n\nconst WorkExperienceForm = (props: Props) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const workExperience = useSelector((store: Store) => store.workExperience.workExperience) as WorkExperience;\n    const isNewWorkExperienceAdded = useSelector((store: Store) => store.workExperience.isNewWorkExperienceAdded) as boolean;\n    const isWorkExperienceUpdated = useSelector((store: Store) => store.workExperience.isWorkExperienceUpdated) as boolean;\n    const isFetchingWorkExperience = useSelector((store: Store) => store.workExperience.isFetchingWorkExperience) as boolean;\n    const isAddingWorkExperience = useSelector((store: Store) => store.workExperience.isAddingWorkExperience) as boolean;\n    const isUpdatingWorkExperience = useSelector((store: Store) => store.workExperience.isUpdatingWorkExperience) as boolean;\n    const [timeframe, setTimeframe] = useState(\"\");\n    const [place, setPlace] = useState(\"\");\n    const [activity, setActivity] = useState(\"\");\n    const [activities, setActivities] = useState<string[]>([]);\n    const [isActivitiesEmpty, setIsActivitiesEmpty] = useState(false);\n    const [readyToCheckChanges, setReadyToCheckChanges] = useState(false);\n\n    useEffect(() => {\n        if (props.id !== undefined) dispatch(fetchWorkExperience(props.id));\n    }, []);\n\n    useEffect(() => {\n        if ((isNewWorkExperienceAdded || isWorkExperienceUpdated) && readyToCheckChanges) history.push(\"/admin/work-experiences\");\n    }, [isNewWorkExperienceAdded, isWorkExperienceUpdated]);\n\n    useEffect(() => {\n        if (Object.keys(workExperience).length > 0 && props.id !== undefined) {\n            setTimeframe(workExperience.timeframe!!);\n            setPlace(workExperience.place!!);\n            setActivities(workExperience.activities!!);\n        }\n    }, [workExperience]);\n\n    const addActivity = () => {\n        if (activity !== \"\") {\n            const _activities = activities;\n            _activities.push(activity);\n            setActivities(_activities);\n            setActivity(\"\");\n            setIsActivitiesEmpty(false);\n        }\n    };\n\n    const onSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (activities.length === 0) setIsActivitiesEmpty(true);\n        else {\n            setReadyToCheckChanges(true);\n            if (props.id !== undefined) {\n                dispatch(\n                    updateWorkExperience(props.id, {\n                        timeframe: timeframe,\n                        place: place,\n                        activities: activities,\n                    })\n                );\n            } else {\n                dispatch(\n                    addWorkExperience({\n                        timeframe: timeframe,\n                        place: place,\n                        activities: activities,\n                    })\n                );\n            }\n        }\n    };\n\n    return (\n        <Card className=\"w-full bg-white flex flex-wrap p-6\">\n            {isFetchingWorkExperience && <ProgressBar className=\"mt-4 mx-auto text-4xl\" color=\"red-600\" />}\n\n            {!isFetchingWorkExperience && (\n                <div className=\"w-full flex flex-wrap\">\n                    <span className=\"w-full text-2xl font-bold text-gray-600\">\n                        {props.id !== undefined ? \"Update Work Experience\" : \"Add New Work Experience\"}\n                    </span>\n\n                    <form className=\"flex flex-wrap mt-2 w-full md:w-2/3 lg:1/2\" onSubmit={onSubmit}>\n                        <label className=\"w-full\">Timeframe</label>\n\n                        <Input\n                            className=\"w-full mt-2\"\n                            type=\"text\"\n                            placeholder=\"Input Timeframe\"\n                            required\n                            onChange={(e) => setTimeframe(e.currentTarget.value)}\n                            value={timeframe}\n                            disabled={isAddingWorkExperience || isUpdatingWorkExperience}\n                        />\n\n                        <label className=\"w-full mt-4\">Place</label>\n\n                        <Input\n                            className=\"w-full mt-2\"\n                            type=\"text\"\n                            placeholder=\"Input Place\"\n                            required\n                            onChange={(e) => setPlace(e.currentTarget.value)}\n                            value={place}\n                            disabled={isAddingWorkExperience || isUpdatingWorkExperience}\n                        />\n\n                        <label className=\"w-full mt-4\">Activity</label>\n\n                        <div className=\"flex mt-2 w-full\">\n                            <Input\n                                className=\"w-full\"\n                                type=\"text\"\n                                onChange={(e) => setActivity(e.currentTarget.value)}\n                                value={activity}\n                                placeholder=\"Input Activity\"\n                            />\n\n                            <Button type=\"button\" className=\"ml-3\" color=\"green-700\" onClick={addActivity}>\n                                <FontAwesomeIcon icon={faPlus} />\n                            </Button>\n                        </div>\n\n                        {isActivitiesEmpty && (\n                            <Alert className=\"mt-3\" mode={AlertMode.error}>\n                                Activities Min 1\n                            </Alert>\n                        )}\n\n                        {activities.length > 0 && (\n                            <div className=\"flex flex-wrap w-full\">\n                                <div className=\"w-full mt-4\">\n                                    <label>Activities | </label>\n                                    <span className=\"text-red-600 font-medium cursor-pointer\" onClick={() => setActivities([])}>\n                                        Clear\n                                    </span>\n                                </div>\n\n                                <ul className=\"mt-1\">\n                                    {activities.map((activity, i) => {\n                                        return <li key={i}>- {activity}</li>;\n                                    })}\n                                </ul>\n                            </div>\n                        )}\n\n                        <Button type=\"submit\" className=\"mt-4 ml-1\" color=\"green-700\" isLoading={isAddingWorkExperience || isUpdatingWorkExperience}>\n                            Save\n                        </Button>\n                    </form>\n                </div>\n            )}\n        </Card>\n    );\n};\n\nexport default WorkExperienceForm;\n","/Users/erthru/Desktop/erthru-cv/src/components/me/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/work-experiences/index.tsx",["260"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Store } from \"../../plugins/store\";\nimport { removeWorkExperience } from \"../../plugins/store/work-experience/actions\";\nimport { WorkExperience } from \"../../plugins/store/work-experience/types\";\nimport AddNewButton from \"../add-new-button\";\nimport Card from \"../card\";\nimport EditButton from \"../edit-button\";\nimport ProgressBar from \"../progress-bar\";\nimport RemoveButton from \"../remove-button\";\nimport SearchInput from \"../search-input\";\nimport Table from \"../table\";\n\nconst WorkExperiences = () => {\n    const dispatch = useDispatch();\n    const workExperiences = useSelector((store: Store) => store.workExperience.workExperiences) as WorkExperience[];\n    const isFetchingWorkExperiences = useSelector((store: Store) => store.workExperience.isFetchingWorkExperiences) as boolean;\n    const isRemovingWorkExperience = useSelector((store: Store) => store.workExperience.isRemovingWorkExperience) as boolean;\n    const [search, setSearch] = useState(\"\");\n    const [_workExperiences, _setWorkExperiences] = useState<WorkExperience[]>([]);\n\n    useEffect(() => {\n        if (workExperiences.length > 0) {\n            _setWorkExperiences(workExperiences);\n        }\n    }, [workExperiences]);\n\n    useEffect(() => {\n        if (search !== \"\") {\n            const tempWorkExperiences = _workExperiences.filter(\n                (workExperience) =>\n                    workExperience.activities?.join(\", \").toLowerCase().includes(search.toLowerCase()) ||\n                    workExperience.place?.toLowerCase().includes(search.toLocaleLowerCase())\n            );\n\n            _setWorkExperiences(tempWorkExperiences);\n        } else {\n            _setWorkExperiences(workExperiences);\n        }\n    }, [search]);\n\n    return (\n        <Card className=\"w-full p-6 flex flex-wrap\">\n            <div className=\"flex flex-wrap w-full\">\n                <AddNewButton to=\"/admin/work-experience/add\" className=\"mx-auto md:mx-0\" />\n                <SearchInput value={search} onChange={(e) => setSearch(e.currentTarget.value)} className=\"mx-auto md:ml-auto md:mr-0 mt-3 md:mt-0\" />\n            </div>\n\n            {(isFetchingWorkExperiences || isRemovingWorkExperience) && <ProgressBar color=\"red-600\" className=\"mt-4 mx-auto text-4xl\" />}\n\n            {!isFetchingWorkExperiences && !isRemovingWorkExperience && (\n                <div className=\"w-full mt-4\">\n                    <Table\n                        className=\"w-full\"\n                        headers={[\"Timeframe\", \"Place\", \"Activity\", \"Actions\"]}\n                        rows={[\n                            ..._workExperiences.map((workExperience) => {\n                                return [\n                                    <span>{workExperience.timeframe}</span>,\n                                    <span>{workExperience.place}</span>,\n                                    <span>{workExperience.activities?.join(\", \")}</span>,\n\n                                    <div className=\"flex flex-wrap\">\n                                        <div className=\"w-full flex\">\n                                            <EditButton to={\"/admin/work-experience/edit/\" + workExperience.id} className=\"mx-auto\" />\n                                        </div>\n\n                                        <div className=\"w-full flex mt-1\">\n                                            <RemoveButton className=\"mx-auto\" onClick={() => dispatch(removeWorkExperience(workExperience.id!!))} />\n                                        </div>\n                                    </div>,\n                                ];\n                            }),\n                        ]}\n                    />\n                </div>\n            )}\n        </Card>\n    );\n};\n\nexport default WorkExperiences;\n","/Users/erthru/Desktop/erthru-cv/src/components/sidebar-item/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/progress-bar/index.tsx",["261"],"import { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\ntype Props = {\n    className?: string;\n    color: string;\n};\n\nconst ProgressBar = (props: Props) => (\n    <FontAwesomeIcon icon={faCircleNotch} className={\"animate-spin \" + \"text-\" + props.color + \" \" + props.className} />\n);\n\nexport default ProgressBar;\n","/Users/erthru/Desktop/erthru-cv/src/components/topbar-item/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/alert/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/button/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/input/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/me-edit-form/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/modal/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/remove-button/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/table/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/add-new-button/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/edit-button/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/search-input/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/backdrop/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/components/card/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/formal-education/reducers.ts",[],"/Users/erthru/Desktop/erthru-cv/src/plugins/store/formal-education/types.ts",["262","263","264","265","266"],"export enum FORMAL_EDUCATION_TYPES {\n    FETCH_FORMAL_EDUCATIONS_PREPARE = \"FETCH_FORMAL_EDUCATIONS_PREPARE\",\n    FETCH_FORMAL_EDUCATIONS_COMPLETED = \"FETCH_FORMAL_EDUCATIONS_COMPLETED\",\n    FETCH_FORMAL_EDUCATION_PREPARE = \"FETCH_FORMAL_EDUCATION_PREPARE\",\n    FETCH_FORMAL_EDUCATION_COMPLETED = \"FETCH_FORMAL_EDUCATION_COMPLETED\",\n    ADD_FORMAL_EDUCATION_PREPARE = \"ADD_FORMAL_EDUCATION_PREPARE\",\n    ADD_FORMAL_EDUCATION_COMPLETED = \"ADD_FORMAL_EDUCATION_COMPLETED\",\n    UPDATE_FORMAL_EDUCATION_PREPARE = \"UPDATE_FORMAL_EDUCATION_PREPARE\",\n    UPDATE_FORMAL_EDUCATION_COMPLETED = \"UPDATE_FORMAL_EDUCATION_COMPLETED\",\n    REMOVE_FORMAL_EDUCATION_PREPARE = \"REMOVE_FORMAL_EDUCATION_PREPARE\",\n    REMOVE_FORMAL_EDUCATION_COMPLETED = \"REMOVE_FORMAL_EDUCATION_COMPLETED\",\n}\n\nexport const FORMAL_EDUCATION_COL_NAME = \"formalEducations\";\n\nexport type FormalEducation = {\n    id?: string;\n    [FormalEducationField.timeframe]?: string;\n    [FormalEducationField.place]?: string;\n    [FormalEducationField.majors]?: string;\n    [FormalEducationField.createdOn]?: Date;\n    [FormalEducationField.updatedOn]?: Date;\n};\n\nexport enum FormalEducationField {\n    timeframe = \"timeframe\",\n    place = \"place\",\n    majors = \"majors\",\n    createdOn = \"createdOn\",\n    updatedOn = \"updatedOn\",\n}\n\nexport type FormalEducationState = {\n    formalEducations: FormalEducation[];\n    formalEducation: FormalEducation;\n    isFetchingFormalEducations: boolean;\n    isFetchingFormalEducation: boolean;\n    isNewFormalEducationAdded: boolean;\n    isFormalEducationUpdated: boolean;\n    isFormalEducationRemoved: boolean;\n    isAddingFormalEducation: boolean;\n    isUpdatingFormalEducation: boolean;\n    isRemovingFormalEducation: boolean;\n};\n\nexport type FormalEducationAction = {\n    type: FORMAL_EDUCATION_TYPES;\n    payload?: {\n        formalEducations?: FormalEducation[];\n        formalEducation?: FormalEducation;\n    };\n};\n","/Users/erthru/Desktop/erthru-cv/src/plugins/store/formal-education/actions.ts",["267"],"/Users/erthru/Desktop/erthru-cv/src/components/formal-educations/index.tsx",["268"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Store } from \"../../plugins/store\";\nimport { removeFormalEducation } from \"../../plugins/store/formal-education/actions\";\nimport { FormalEducation } from \"../../plugins/store/formal-education/types\";\nimport AddNewButton from \"../add-new-button\";\nimport Card from \"../card\";\nimport EditButton from \"../edit-button\";\nimport ProgressBar from \"../progress-bar\";\nimport RemoveButton from \"../remove-button\";\nimport SearchInput from \"../search-input\";\nimport Table from \"../table\";\n\nconst FormalEducations = () => {\n    const dispatch = useDispatch();\n    const formalEducations = useSelector((store: Store) => store.formalEducation.formalEducations) as FormalEducation[];\n    const isFetchingFormalEducations = useSelector((store: Store) => store.formalEducation.isFetchingFormalEducations) as boolean;\n    const isRemovingFormalEducation = useSelector((store: Store) => store.formalEducation.isRemovingFormalEducation) as boolean;\n    const [search, setSearch] = useState(\"\");\n    const [_formalEducations, _setFormalEducations] = useState<FormalEducation[]>([]);\n\n    useEffect(() => {\n        if (formalEducations.length > 0) {\n            _setFormalEducations(formalEducations);\n        }\n    }, [formalEducations]);\n\n    useEffect(() => {\n        if (search !== \"\") {\n            const tempFormalEducations = _formalEducations.filter(\n                (formalEducation) =>\n                    formalEducation.majors?.toLowerCase().includes(search.toLowerCase()) ||\n                    formalEducation.place?.toLowerCase().includes(search.toLocaleLowerCase())\n            );\n\n            _setFormalEducations(tempFormalEducations);\n        } else {\n            _setFormalEducations(formalEducations);\n        }\n    }, [search]);\n\n    return (\n        <Card className=\"w-full flex flex-wrap p-6\">\n            <div className=\"flex flex-wrap w-full\">\n                <AddNewButton to=\"/admin/formal-education/add\" className=\"mx-auto md:mx-0\" />\n                <SearchInput value={search} onChange={(e) => setSearch(e.currentTarget.value)} className=\"mx-auto md:ml-auto md:mr-0 mt-3 md:mt-0\" />\n            </div>\n\n            {(isFetchingFormalEducations || isRemovingFormalEducation) && <ProgressBar color=\"red-600\" className=\"mt-4 mx-auto text-4xl\" />}\n\n            {!isFetchingFormalEducations && !isRemovingFormalEducation && (\n                <div className=\"w-full mt-4\">\n                    <Table\n                        className=\"w-full\"\n                        headers={[\"Timeframe\", \"Place\", \"Majors\", \"Actions\"]}\n                        rows={[\n                            ..._formalEducations.map((formalEducation) => {\n                                return [\n                                    <span>{formalEducation.timeframe}</span>,\n                                    <span>{formalEducation.place}</span>,\n                                    <span>{formalEducation.majors}</span>,\n\n                                    <div className=\"flex flex-wrap\">\n                                        <div className=\"w-full flex\">\n                                            <EditButton to={\"/admin/formal-education/edit/\" + formalEducation.id} className=\"mx-auto\" />\n                                        </div>\n\n                                        <div className=\"w-full flex mt-1\">\n                                            <RemoveButton className=\"mx-auto\" onClick={() => dispatch(removeFormalEducation(formalEducation.id!!))} />\n                                        </div>\n                                    </div>,\n                                ];\n                            }),\n                        ]}\n                    />\n                </div>\n            )}\n        </Card>\n    );\n};\n\nexport default FormalEducations;\n","/Users/erthru/Desktop/erthru-cv/src/containers/admin/add-formal-education/index.tsx",["269"],"import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch } from \"react-redux\";\nimport FormalEducationForm from \"../../../components/formal-education-form\";\nimport { APP_TITLE } from \"../../../helpers/environments\";\nimport { setNavigationKey } from \"../../../plugins/store/navigation/actions\";\nimport { NavigationKey } from \"../../../plugins/store/navigation/types\";\n\nconst AddFormalEducation = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setNavigationKey(NavigationKey.formalEducations));\n    }, []);\n\n    return (\n        <div>\n            <Helmet title={\"Add Formal Education - \" + APP_TITLE} />\n            <FormalEducationForm />\n        </div>\n    );\n};\n\nexport default AddFormalEducation;\n","/Users/erthru/Desktop/erthru-cv/src/components/formal-education-form/index.tsx",["270","271","272"],"import React, { FormEvent, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Store } from \"../../plugins/store\";\nimport { addFormalEducation, fetchFormalEducation, updateFormalEducation } from \"../../plugins/store/formal-education/actions\";\nimport { FormalEducation } from \"../../plugins/store/formal-education/types\";\nimport Button from \"../button\";\nimport Card from \"../card\";\nimport Input from \"../input\";\nimport ProgressBar from \"../progress-bar\";\n\ntype Props = {\n    id?: string;\n};\n\nconst FormalEducationForm = (props: Props) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const formalEducation = useSelector((store: Store) => store.formalEducation.formalEducation) as FormalEducation;\n    const isFetchingFormalEducation = useSelector((store: Store) => store.formalEducation.isFetchingFormalEducation) as boolean;\n    const isNewFormalEducationAdded = useSelector((store: Store) => store.formalEducation.isNewFormalEducationAdded) as boolean;\n    const isFormalEducationUpdated = useSelector((store: Store) => store.formalEducation.isFormalEducationUpdated) as boolean;\n    const isAddingFormalEducation = useSelector((store: Store) => store.formalEducation.isAddingFormalEducation) as boolean;\n    const isUpdatingFormalEducation = useSelector((store: Store) => store.formalEducation.isUpdatingFormalEducation) as boolean;\n    const [timeframe, setTimeframe] = useState(\"\");\n    const [place, setPlace] = useState(\"\");\n    const [majors, setMajors] = useState(\"\");\n    const [readyToCheckChanges, setReadyToCheckChanges] = useState(false);\n\n    useEffect(() => {\n        if (props.id !== undefined) dispatch(fetchFormalEducation(props.id));\n    }, []);\n\n    useEffect(() => {\n        if ((isNewFormalEducationAdded || isFormalEducationUpdated) && readyToCheckChanges) history.push(\"/admin/formal-educations\");\n    }, [isNewFormalEducationAdded, isFormalEducationUpdated]);\n\n    useEffect(() => {\n        if (Object.keys(formalEducation).length > 0 && props.id !== undefined) {\n            setTimeframe(formalEducation.timeframe!!);\n            setPlace(formalEducation.place!!);\n            setMajors(formalEducation.majors!!);\n        }\n    }, [formalEducation]);\n\n    const onSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setReadyToCheckChanges(true);\n\n        if (props.id !== undefined) {\n            dispatch(\n                updateFormalEducation(props.id, {\n                    timeframe: timeframe,\n                    place: place,\n                    majors: majors,\n                })\n            );\n        } else {\n            dispatch(\n                addFormalEducation({\n                    timeframe: timeframe,\n                    place: place,\n                    majors: majors,\n                })\n            );\n        }\n    };\n\n    return (\n        <Card className=\"w-full bg-white flex flex-wrap p-6\">\n            {isFetchingFormalEducation && <ProgressBar className=\"mt-4 mx-auto text-4xl\" color=\"red-600\" />}\n\n            {!isFetchingFormalEducation && (\n                <div className=\"w-full flex flex-wrap\">\n                    <span className=\"w-full text-2xl font-bold text-gray-600\">\n                        {props.id !== undefined ? \"Update Formal Education\" : \"Add New Formal Education\"}\n                    </span>\n\n                    <form className=\"flex flex-wrap mt-2 w-full md:w-2/3 lg:1/2\" onSubmit={onSubmit}>\n                        <label className=\"w-full\">Timeframe</label>\n\n                        <Input\n                            className=\"w-full mt-2\"\n                            type=\"text\"\n                            placeholder=\"Input Timeframe\"\n                            required\n                            onChange={(e) => setTimeframe(e.currentTarget.value)}\n                            value={timeframe}\n                            disabled={isAddingFormalEducation || isUpdatingFormalEducation}\n                        />\n\n                        <label className=\"w-full mt-4\">Place</label>\n\n                        <Input\n                            className=\"w-full mt-2\"\n                            type=\"text\"\n                            placeholder=\"Input Place\"\n                            required\n                            onChange={(e) => setPlace(e.currentTarget.value)}\n                            value={place}\n                            disabled={isAddingFormalEducation || isUpdatingFormalEducation}\n                        />\n\n                        <label className=\"w-full mt-4\">Majors</label>\n\n                        <Input\n                            className=\"w-full mt-2\"\n                            type=\"text\"\n                            placeholder=\"Input Majors\"\n                            required\n                            onChange={(e) => setMajors(e.currentTarget.value)}\n                            value={majors}\n                            disabled={isAddingFormalEducation || isUpdatingFormalEducation}\n                        />\n\n                        <Button\n                            type=\"submit\"\n                            className=\"mt-4 ml-1\"\n                            color=\"green-700\"\n                            isLoading={isAddingFormalEducation || isUpdatingFormalEducation}\n                        >\n                            Save\n                        </Button>\n                    </form>\n                </div>\n            )}\n        </Card>\n    );\n};\n\nexport default FormalEducationForm;\n","/Users/erthru/Desktop/erthru-cv/src/containers/admin/edit-formal-education/index.tsx",["273"],"import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport FormalEducationForm from \"../../../components/formal-education-form\";\nimport { APP_TITLE } from \"../../../helpers/environments\";\nimport { setNavigationKey } from \"../../../plugins/store/navigation/actions\";\nimport { NavigationKey } from \"../../../plugins/store/navigation/types\";\n\ntype Params = {\n    id: string;\n};\n\nconst EditFormalEducation = () => {\n    const dispatch = useDispatch();\n    const params = useParams<Params>();\n\n    useEffect(() => {\n        dispatch(setNavigationKey(NavigationKey.formalEducations));\n    }, []);\n\n    return (\n        <div>\n            <Helmet title={\"Edit Formal Education - \" + APP_TITLE} />\n            <FormalEducationForm id={params.id} />\n        </div>\n    );\n};\n\nexport default EditFormalEducation;\n","/Users/erthru/Desktop/erthru-cv/src/containers/index.tsx",[],"/Users/erthru/Desktop/erthru-cv/src/containers/landing/index.tsx",[],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":12,"column":6,"nodeType":"280","messageId":"281","endLine":12,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":13,"column":6,"nodeType":"280","messageId":"281","endLine":13,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":14,"column":6,"nodeType":"280","messageId":"281","endLine":14,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":15,"column":6,"nodeType":"280","messageId":"281","endLine":15,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":16,"column":6,"nodeType":"280","messageId":"281","endLine":16,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":17,"column":6,"nodeType":"280","messageId":"281","endLine":17,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":18,"column":6,"nodeType":"280","messageId":"281","endLine":18,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":19,"column":6,"nodeType":"280","messageId":"281","endLine":19,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":37,"column":8,"nodeType":"284","endLine":37,"endColumn":10,"suggestions":"285"},{"ruleId":"282","severity":1,"message":"283","line":43,"column":8,"nodeType":"284","endLine":51,"endColumn":6,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":36,"column":48,"nodeType":"289","messageId":"290","endLine":36,"endColumn":50},{"ruleId":"287","severity":1,"message":"288","line":28,"column":42,"nodeType":"289","messageId":"290","endLine":28,"endColumn":44},{"ruleId":"282","severity":1,"message":"283","line":20,"column":8,"nodeType":"284","endLine":20,"endColumn":10,"suggestions":"291"},{"ruleId":"282","severity":1,"message":"283","line":14,"column":8,"nodeType":"284","endLine":14,"endColumn":10,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":19,"column":13,"nodeType":"295","endLine":19,"endColumn":33},{"ruleId":"282","severity":1,"message":"283","line":14,"column":8,"nodeType":"284","endLine":14,"endColumn":10,"suggestions":"296"},{"ruleId":"293","severity":1,"message":"297","line":19,"column":13,"nodeType":"295","endLine":19,"endColumn":34},{"ruleId":"282","severity":1,"message":"283","line":14,"column":8,"nodeType":"284","endLine":14,"endColumn":10,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":1,"column":82,"nodeType":"280","messageId":"301","endLine":1,"endColumn":89},{"ruleId":"282","severity":1,"message":"302","line":37,"column":8,"nodeType":"284","endLine":37,"endColumn":10,"suggestions":"303"},{"ruleId":"282","severity":1,"message":"304","line":41,"column":8,"nodeType":"284","endLine":41,"endColumn":59,"suggestions":"305"},{"ruleId":"282","severity":1,"message":"306","line":49,"column":8,"nodeType":"284","endLine":49,"endColumn":24,"suggestions":"307"},{"ruleId":"282","severity":1,"message":"308","line":40,"column":8,"nodeType":"284","endLine":40,"endColumn":16,"suggestions":"309"},{"ruleId":"310","severity":1,"message":"311","line":11,"column":70,"nodeType":"312","messageId":"313","endLine":11,"endColumn":71},{"ruleId":"278","severity":1,"message":"314","line":18,"column":6,"nodeType":"280","messageId":"281","endLine":18,"endColumn":26},{"ruleId":"278","severity":1,"message":"314","line":19,"column":6,"nodeType":"280","messageId":"281","endLine":19,"endColumn":26},{"ruleId":"278","severity":1,"message":"314","line":20,"column":6,"nodeType":"280","messageId":"281","endLine":20,"endColumn":26},{"ruleId":"278","severity":1,"message":"314","line":21,"column":6,"nodeType":"280","messageId":"281","endLine":21,"endColumn":26},{"ruleId":"278","severity":1,"message":"314","line":22,"column":6,"nodeType":"280","messageId":"281","endLine":22,"endColumn":26},{"ruleId":"287","severity":1,"message":"288","line":24,"column":50,"nodeType":"289","messageId":"290","endLine":24,"endColumn":52},{"ruleId":"282","severity":1,"message":"315","line":40,"column":8,"nodeType":"284","endLine":40,"endColumn":16,"suggestions":"316"},{"ruleId":"282","severity":1,"message":"283","line":14,"column":8,"nodeType":"284","endLine":14,"endColumn":10,"suggestions":"317"},{"ruleId":"282","severity":1,"message":"302","line":32,"column":8,"nodeType":"284","endLine":32,"endColumn":10,"suggestions":"318"},{"ruleId":"282","severity":1,"message":"304","line":36,"column":8,"nodeType":"284","endLine":36,"endColumn":61,"suggestions":"319"},{"ruleId":"282","severity":1,"message":"306","line":44,"column":8,"nodeType":"284","endLine":44,"endColumn":25,"suggestions":"320"},{"ruleId":"282","severity":1,"message":"283","line":20,"column":8,"nodeType":"284","endLine":20,"endColumn":10,"suggestions":"321"},"no-native-reassign",["322"],"no-negated-in-lhs",["323"],"@typescript-eslint/no-use-before-define","'ProfileField' was used before it was defined.","Identifier","noUseBeforeDefine","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["324"],["325"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["326"],["327"],"react/jsx-pascal-case","Imported JSX component _WorkExperiences must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement",["328"],"Imported JSX component _FormalEducations must be in PascalCase or SCREAMING_SNAKE_CASE",["329"],"@typescript-eslint/no-unused-vars","'faTools' is defined but never used.","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["330"],"React Hook useEffect has missing dependencies: 'history' and 'readyToCheckChanges'. Either include them or remove the dependency array.",["331"],"React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["332"],"React Hook useEffect has missing dependencies: '_workExperiences' and 'workExperiences'. Either include them or remove the dependency array.",["333"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'FormalEducationField' was used before it was defined.","React Hook useEffect has missing dependencies: '_formalEducations' and 'formalEducations'. Either include them or remove the dependency array.",["334"],["335"],["336"],["337"],["338"],["339"],"no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"340","fix":"344"},{"desc":"340","fix":"345"},{"desc":"340","fix":"346"},{"desc":"340","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"340","fix":"358"},{"desc":"348","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"340","fix":"364"},"Update the dependencies array to be: [dispatch]",{"range":"365","text":"366"},"Update the dependencies array to be: [isProfileUpdated, isNewWorkExperienceAdded, isWorkExperienceUpdated, isWorkExperienceRemoved, isNewFormalEducationAdded, isFormalEducationUpdated, isFormalEducationRemoved, dispatch]",{"range":"367","text":"368"},{"range":"369","text":"366"},{"range":"370","text":"366"},{"range":"371","text":"366"},{"range":"372","text":"366"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"373","text":"374"},"Update the dependencies array to be: [history, isNewWorkExperienceAdded, isWorkExperienceUpdated, readyToCheckChanges]",{"range":"375","text":"376"},"Update the dependencies array to be: [props.id, workExperience]",{"range":"377","text":"378"},"Update the dependencies array to be: [_workExperiences, search, workExperiences]",{"range":"379","text":"380"},"Update the dependencies array to be: [_formalEducations, formalEducations, search]",{"range":"381","text":"382"},{"range":"383","text":"366"},{"range":"384","text":"374"},"Update the dependencies array to be: [isNewFormalEducationAdded, isFormalEducationUpdated, readyToCheckChanges, history]",{"range":"385","text":"386"},"Update the dependencies array to be: [formalEducation, props.id]",{"range":"387","text":"388"},{"range":"389","text":"366"},[2141,2143],"[dispatch]",[2488,2724],"[isProfileUpdated, isNewWorkExperienceAdded, isWorkExperienceUpdated, isWorkExperienceRemoved, isNewFormalEducationAdded, isFormalEducationUpdated, isFormalEducationRemoved, dispatch]",[700,702],[569,571],[573,575],[577,579],[2069,2071],"[dispatch, props.id]",[2235,2286],"[history, isNewWorkExperienceAdded, isWorkExperienceUpdated, readyToCheckChanges]",[2565,2581],"[props.id, workExperience]",[1817,1825],"[_workExperiences, search, workExperiences]",[1833,1841],"[_formalEducations, formalEducations, search]",[581,583],[1786,1788],[1955,2008],"[isNewFormalEducationAdded, isFormalEducationUpdated, readyToCheckChanges, history]",[2283,2300],"[formalEducation, props.id]",[704,706]]